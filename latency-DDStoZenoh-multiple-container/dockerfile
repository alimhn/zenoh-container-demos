######################## stage 1 ######################### 
# Build ./subscriber
FROM ghcr.io/bounverif/boostdevel:latest as builder_subscriber

ARG ZENOH_VERSION=0.10.1-rc
ARG ZENOHC_VERSION=${ZENOH_VERSION}
ARG REELAY_VERSION=main
ARG SIMDJSON_VERSION=3.9.1

ARG RUST_VERSION=1.72.1
ARG RUST_PROFILE=minimal
ARG RUST_TOOLCHAIN=${RUST_VERSION}-x86_64-unknown-linux-gnu
ENV CARGO_HOME="/usr/local/cargo"

ENV RUSTUP_HOME="/usr/local/rustup"
ENV PATH "/usr/local/cargo/bin:/usr/local/rustup:${PATH}"

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | \
    sh -s -- -y --no-modify-path --profile ${RUST_PROFILE} --default-toolchain ${RUST_VERSION}

RUN git clone --depth 1 --branch ${ZENOHC_VERSION} https://github.com/eclipse-zenoh/zenoh-c.git /tmp/zenoh-c && \
    cmake -S/tmp/zenoh-c -B/tmp/zenoh-c/build \
        -DCMAKE_BUILD_TYPE=Release \
        -DZENOHC_CARGO_CHANNEL=${RUST_TOOLCHAIN} \
        -DZENOHC_INSTALL_STATIC_LIBRARY=TRUE \
        && \
    cmake --build /tmp/zenoh-c/build/ --target install -j$(nproc) && \
    rm -rf /tmp/zenoh-c

COPY ./subscriber /app/
WORKDIR /app/

RUN cmake --preset default && \
    cmake --build  --target install -j$(nproc) --preset default 

######################## stage 2 ######################### 
# Build CycloneDDS from source
FROM debian:bookworm-slim as builder_cyclone

RUN apt update && apt install -y \
        cmake \
        g++ \
        git


ARG CYCLONEDDS_VERSION=0.10.2
# Options: Debug, Release, RelWithDebInfo, MinSizeRel
ARG CYCLONEDDS_BUILD_TYPE=RelWithDebInfo

RUN git clone https://github.com/eclipse-cyclonedds/cyclonedds.git /cyclonedds && \
    cd /cyclonedds && \
    git checkout --quiet ${CYCLONEDDS_VERSION} && \
    mkdir build install && \
    cd build
WORKDIR /cyclonedds/build
RUN cmake .. -DCMAKE_INSTALL_PREFIX="/cyclonedds/install/" -DCMAKE_BUILD_TYPE=${CYCLONEDDS_BUILD_TYPE}
RUN cmake --build . --target install -j$(nproc)

######################## stage 3 ######################### 
# Final image
FROM debian:bookworm-slim
ENV DEBIAN_FRONTEND=noninteractive

# Copy subscriber from builder_subscriber
COPY --from=builder_subscriber /usr/local/bin/subscriber /usr/local/bin

# Copy cyclonedds from builder_cyclone
ENV CYCLONEDDS_HOME=/usr/local/cyclonedds/
ENV PATH="${CYCLONEDDS_HOME}/bin:${PATH}"
COPY --from=builder_cyclone /cyclonedds/install/ ${CYCLONEDDS_HOME}

# # Optional: Install cyclonedds package for python if better observability is needed
# RUN apt-get update && apt-get install -y \
#         python3 \
#         python3-pip \
#         python3-setuptools \
#         python3-wheel \
#         && \
#     rm -rf /var/lib/apt/lists/*
# RUN pip install --no-cache-dir --break-system-packages "cyclonedds==0.10.2"

# COPY entrypoint.sh /usr/local/bin/entrypoint.sh
# RUN chmod +x /usr/local/bin/entrypoint.sh

# Unset the entrypoint
ENTRYPOINT [ "" ]

## Example run:

# docker run --rm -it foo --help
# docker run --rm -it foo ping 100Hz